{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc6cd96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n  background: var(--darkGrey);\n  padding: 0 20 px;\n`;\n\nexport const Content = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\nexport const LogoImg = styled.img `\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img `\n  width: 100px;\n  \n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    \n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\n\nconst HeroImage = ({image, title, text}) => (\n    <Wrapper image = {image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n}\n\nexport default HeroImage;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n     max-width: var(--maxWidth);\n     margin: 0 auto;\n     padding: 0 20px;\n\n     h1{\n         color: var(--medGrey);\n\n         @media screen and (max-width: 768px){\n             font-size: var(--fontBig);\n         }\n     }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//styles\nimport { Wrapper, Content} from \"./Grid.styles\";\n\nconst Grid = ({header, children}) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n    </Wrapper>\n);\n\nGrid.propTypes = {\n    header: PropTypes.string, \n}\n\nexport default Grid;","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"\n\n//styles\nimport { Image } from \"./Thumb.styles\";\n\nconst Thumb = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <Image src={image} alt=\"movie-thumb\" />\n      </Link>\n    ) : (\n      <Image src={image} alt=\"movie-thumb\" />\n    )}\n  </div>\n);\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n}\n\nexport default Thumb;\n","import { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n  }\n\n  *:focus {\n    outline: none;\n  }\n`;\n","import { useState, useEffect, useRef } from \"react\";\nimport react from \"react\";\nimport PropTypes from \"prop-types\"\n//Image\nimport searchIcon from \"../../images/search-icon.svg\";\n//Styles\nimport { Wrapper, Content } from \"../SearchBar/SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => setTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\" text\"\n          placeholder=\"Search Movie\"\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n}\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\ndisplay: block;\nbackground: var(--darkGrey);\nwidth: 25%;\nmin-width: 200px;\nheight: 60px;\nborder-radius: 30px;\ncolor: var(--white);\nborder: 0;\nfont-size: var(--fontBig);\nmargin: 20px auto;\ntransition: all 0.3s;\noutline: none;\ncursor: pointer;\n\n:hover{\n    opacity: 0.8;\n}\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nButton.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func\n}\n\nexport default Button;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName =>{\n  const sessionState =  sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n}","import { useState, useEffect } from \"react\";\n//API\nimport API from \"../API\";\n//Helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  //Initial and Search\n  useEffect(() => {\n      if(!searchTerm){\n        const sessionState = isPersistedState('homeState');\n\n        if(sessionState) {\n          setState(sessionState);\n          return;\n        }\n      }\n\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  //Load More\n  useEffect(() =>{\n    if(!isLoadingMore){\n      return;\n    }\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  },[isLoadingMore, searchTerm, state.page]); \n\n  //Write to sessional storage\n  useEffect(() =>{\n    if(!searchTerm){\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  },[searchTerm, state])\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n//API\nimport API from \"../API\";\n//config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n//components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spinner from \"./Spinner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\n//Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n//Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\n  console.log(state);\n\n  if(error){\n    return <div>Something went wrong ...</div>\n  }\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text = 'Load More' callback ={() => setIsLoadingMore(true)}/>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay:flex ;\nalign-items: center;\nwidth: 100%;\nheight: 70px;\nbackground: var(--medGrey);\ncolor: var(--white);\n`;\n\nexport const Content = styled.div`\ndisplay: flex;\nwidth: 100%;\nmax-width: var(--maxWidth);\npadding: 0 20px;\n\nspan{\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px){\n        font-size: var(--fontSmall);\n    } \n\n}\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {Link} from \"react-router-dom\"\n\n//syles\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({movieTitle}) => (\n    <Wrapper>\n        <Content>\n            <Link to = '/'>\n                <span>Home</span>\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n        </Content>\n    </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n    movieTitle: PropTypes.string\n}\n\nexport default BreadCrumb;","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px){\n        display: block;\n        max-height: none;\n  }\n\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (maxwidth: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n//Components\nimport Thumb from \"../Thumb\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n//Image\nimport NoImage from  '../../images/no_image.jpg';\n//Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\n\nconst MovieInfo =({ movie }) => (\n    < Wrapper backdrop = {movie.backdrop_path}>\n        <Content>\n            <Thumb\n            image = {\n                movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\n            }\n            clickable = {false}\n            />\n            <Text>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className = \"rating-directors\">\n                    <div>\n                        <h3>RATING</h3>\n                        <div className = \"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className= \"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(director =>(\n                            <p key ={director.credit_id}>{director.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n}\n\nexport default MovieInfo;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n   background: var(--darkGrey);\n   padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n\n    .column{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n\n        :first-child{\n            margin-left: 0;\n        }\n        :last-child{\n            margin-right: 0;\n        }\n    }\n\n    @media screen and (max-width: 768px){\n        display: block;\n\n        .column{\n            margin: 20px 0;\n        }\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n//helpers\nimport {calcTime, convertMoney} from '../../helpers'\n//styles\nimport {Wrapper,Content} from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({time, budget, revenue}) => (\n    <Wrapper>\n        <Content>\n            <div className = \"column\">\n                <p>Running Time: {calcTime(time)}</p>\n            </div>\n            <div className = \"column\">\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>\n            <div className = \"column\">\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>\n        </Content>\n    </Wrapper>\n)\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\n\nexport default MovieInfoBar;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n\n  @media screen and (max-width: 768px){\n    height: 350px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//styles\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image  src={imageUrl} alt=\"actor-thumb\" />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import react from \"react\";\nimport { useParams } from \"react-router-dom\";\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n//components\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n//Hook\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n//Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong</div>;\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {movie.actors.map((actor) => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(\n            member => member.job === 'Director'\n        );\n\n        setState({\n            ...movie,\n            actors: credits.cast,\n            directors\n        });\n\n        setLoading(false); \n\n      } catch {\n        setError(true);\n      }\n    };\n\n    const sessionState = isPersistedState(movieId);\n\n    if(sessionState){\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  //Write to session storage\n  useEffect(()=>{\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  },[movieId,state])\n  \n  return {state, loading, error};\n};\n","import react from 'react';\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;","import React from \"react\";\n//Routing\nimport { BrowserRouter as Router , Routes, Route} from \"react-router-dom\"\n//Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\"\n\n//Style\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n    <Router>\n      <Header/>\n      <Routes>\n        <Route path = '/' element ={<Home/>}/>\n        <Route path = '/:movieId' element = {<Movie/>}/>\n        <Route path = '/*' element = {<NotFound/>}/>\n      </Routes>\n      <GlobalStyle />\n    </Router>\n  );\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}